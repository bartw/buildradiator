{"version":3,"sources":["app.js","build-overview.js","environment.js","main.js","resources/index.js","services/build-factory.js","services/build-service.js","services/http-client-router.js","services/teamcitystub/team-city-http-client-stub.js","services/teamcitystub/team-city-latest-builds-response.js","services/teamcitystub/team-city-latest-running-builds-response.js","C:/Users/robs/Documents/OefProjects/buildradiator/src/app.html","C:/Users/robs/Documents/OefProjects/buildradiator/src/css/custom.css","C:/Users/robs/Documents/OefProjects/buildradiator/src/build-overview.html"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","setAllFailedBuilds","params","service","getAllFailedBuilds","baseUrl","then","builds","BuildOverview","activate","bind","setInterval","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","BuildFactory","buildService","constructFailedBuildObjects","all","getAllLatestRunningBuilds","failedBuilds","buildArrays","latestRunningBuilds","validateFailedBuilds","duplicateNamesInBuildArray","Error","validateRunningBuilds","buildArray","filter","failedBuild1","failedBuild2","length","occurancesOfName","failedBuild","newBuildRunning","isNewBuildRunning","getCorrespondingBuild","latestRunningBuild","undefined","buildNumber","fetchBuildArray","clientRouter","url","init","method","headers","Headers","fetch","response","json","jsonResponse","buildType","buildTypeElement","build","number","status","statusText","BuildService","HttpClientRouter","realHttpClient","teamCityHttpClientStub","includes","TeamCityHttpClientStub","resolve"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = 'Teamcity radiator';\r\n    config.map([\r\n      { route: ':baseUrl', name: 'Build Overview', moduleId: 'build-overview' },\r\n    ]);\r\n  }\r\n}","import { BuildService } from 'services/build-service';\r\nimport { inject } from 'aurelia-framework';\r\n\r\nfunction setAllFailedBuilds(params) {\r\n  this.service\r\n      .getAllFailedBuilds(params.baseUrl)\r\n      .then(builds => { this.builds = builds; });\r\n}\r\n\r\n@inject(BuildService)\r\nexport class BuildOverview {\r\n  constructor(service) {\r\n    this.service = service;\r\n  }\r\n\r\n  activate(params) {\r\n    setAllFailedBuilds.bind(this)(params);\r\n    setInterval(setAllFailedBuilds.bind(this), 30000, params);\r\n  }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import { BuildService } from './build-service';\r\nimport { inject } from 'aurelia-framework';\r\n\r\n@inject(BuildService)\r\nexport class BuildFactory {\r\n    constructor(buildService) {\r\n        this.buildService = buildService;\r\n    }\r\n\r\n    constructFailedBuildObjects(baseUrl) {\r\n        return Promise.all([this.buildService.getAllFailedBuilds(baseUrl), this.buildService.getAllLatestRunningBuilds(baseUrl)])\r\n            .then(buildArrays => {\r\n\r\n                let failedBuilds = buildArrays[0];\r\n                let latestRunningBuilds = buildArrays[1];\r\n\r\n                function validateFailedBuilds() {\r\n                    if (duplicateNamesInBuildArray(failedBuilds)) {\r\n                        throw new Error(\"There are failed builds with the same name. We didn't foresee this to happen. Sorry. Please contact us\");\r\n                    }\r\n                }\r\n\r\n                function validateRunningBuilds() {\r\n                    if (duplicateNamesInBuildArray(latestRunningBuilds)) {\r\n                        throw new Error(\"There are running builds with the same name. We didn't foresee this to happen. Sorry. Please contact us\");\r\n                    }\r\n                }\r\n\r\n                function duplicateNamesInBuildArray(buildArray) {\r\n                    return buildArray\r\n                        .map(failedBuild1 => buildArray.filter(failedBuild2 => failedBuild1.name === failedBuild2.name).length)\r\n                        .filter(occurancesOfName => occurancesOfName > 1).length > 1;\r\n                }\r\n\r\n                validateFailedBuilds();\r\n                validateRunningBuilds();\r\n                return failedBuilds.map(failedBuild => {\r\n\r\n                    failedBuild.newBuildRunning = isNewBuildRunning();\r\n                    return failedBuild;\r\n\r\n                    function isNewBuildRunning() {\r\n\r\n                        function getCorrespondingBuild() {\r\n                            return latestRunningBuilds.filter(latestRunningBuild => latestRunningBuild.name === failedBuild.name)[0];\r\n                        }\r\n\r\n                        return getCorrespondingBuild() !== undefined && getCorrespondingBuild().buildNumber > failedBuild.buildNumber;\r\n                    }\r\n                })\r\n            });\r\n    }\r\n}\r\n","import { HttpClientRouter } from './http-client-router';\r\nimport { inject } from 'aurelia-framework';\r\n\r\nfunction fetchBuildArray(clientRouter, url) {\r\n  let init = {\r\n    method: 'GET',\r\n    headers: new Headers({\r\n      'Accept': 'application/json',\r\n      'X-Requested-With': 'Fetch',\r\n    })\r\n  };\r\n\r\n  return clientRouter.fetch(url, init)\r\n    .then(response => response.json())\r\n    .then(jsonResponse =>\r\n      jsonResponse.buildType\r\n        .filter(buildTypeElement => buildTypeElement.builds.build.length > 0)\r\n        .map(buildTypeElement => {\r\n          return { \r\n            \"name\": buildTypeElement.name,\r\n            \"buildNumber\": buildTypeElement.builds.build[0].number,\r\n            \"status\": buildTypeElement.builds.build[0].status,\r\n            \"statusText\": buildTypeElement.builds.build[0].statusText\r\n          }\r\n        })\r\n    );\r\n}\r\n\r\n@inject(HttpClientRouter)\r\nexport class BuildService {\r\n  constructor(clientRouter) {\r\n    this.clientRouter = clientRouter;\r\n  }\r\n\r\n  getAllFailedBuilds(baseUrl) {\r\n    let url = 'http://' + baseUrl + '/guestAuth/app/rest/buildTypes?locator=affectedProject:(id:_Root)&fields=buildType(id,name,builds($locator(running:false,canceled:false,count:1),build(number,status,statusText)))';\r\n\r\n    return fetchBuildArray(this.clientRouter, url)\r\n      .then(buildArray => buildArray.filter(build => build.status === 'FAILURE'));\r\n  }\r\n\r\n  getAllLatestRunningBuilds(baseUrl) {\r\n    let url = 'http://' + baseUrl + '/guestAuth/app/rest/buildTypes?locator=affectedProject:(id:_Root)&fields=buildType(id,name,builds($locator(running:true,canceled:false,count:1),build(number,status,statusText)))';\r\n\r\n    return fetchBuildArray(this.clientRouter, url)\r\n  }\r\n}\r\n","import { HttpClient } from 'aurelia-fetch-client';\r\nimport { TeamCityHttpClientStub } from './teamcitystub/team-city-http-client-stub';\r\nimport { inject } from 'aurelia-framework';\r\n\r\n@inject(HttpClient, TeamCityHttpClientStub)\r\nexport class HttpClientRouter {\r\n    constructor(realHttpClient, teamCityHttpClientStub) {\r\n        this.realHttpClient = realHttpClient;\r\n        this.teamCityHttpClientStub = teamCityHttpClientStub;\r\n    }\r\n\r\n    fetch(url, init) {\r\n        return url.includes('stub') ? this.teamCityHttpClientStub.fetch(url) : this.realHttpClient.fetch(url, init);\r\n    }\r\n}\r\n","import teamCitylatestBuildsResponse from './team-city-latest-builds-response';\r\nimport teamCitylatestRunningBuildsResponse from './team-city-latest-running-builds-response';\r\n\r\nexport class TeamCityHttpClientStub {\r\n  fetch(url) {\r\n    if (url.includes('running:false')) {\r\n      return Promise.resolve({json: () => teamCitylatestBuildsResponse});\r\n    }\r\n    if (url.includes('running:true')) {\r\n      return Promise.resolve({json: () => teamCitylatestRunningBuildsResponse});\r\n    }\r\n    throw new Error(\"team city http client stub doesn't support \" + url);\r\n  }\r\n};\r\n","export default {\r\n  \"buildType\": [\r\n    {\r\n      \"name\": \"build 1\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.1.70.17327\",\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 198, ignored: 9\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 2\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.1.6965.17318\",\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 2391, ignored: 6\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 3\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"123\",\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 35\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 4\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.1.54.17253\",\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 35\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 5\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.1.54.17287\",\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 4 (1 new), passed: 31\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 6\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"1.2.54.17287\",\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 2, passed: 33; snapshot dependency failed: Main :: Data Quality Tests :: build 6\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 7\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.5.54.17287\",\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 3, passed: 32; snapshot dependency failed: Main :: Data Quality Tests :: build 7\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 8\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.5.87.17287\",\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 8 (1 new), passed: 27; snapshot dependency failed: Main :: Data Quality Tests :: build 8\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 9\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.5.99.17287\",\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 13, passed: 22; snapshot dependency failed: Main :: Data Quality Tests :: build 9\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 10\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.5.99.21\",\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 10, passed: 25\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n};","export default {\r\n  \"buildType\": [\r\n    {\r\n      \"name\": \"build 1\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.1.70.17328\",\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 198, ignored: 9\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 25\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.1.6965.17318\",\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 2391, ignored: 6\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 3\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"120\",\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests passed: 35\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 4\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"number\": \"3.1.54.17255\",\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests passed: 35\"\r\n          }\r\n        ]\r\n      }\r\n    }]\r\n};",null,null,null],"sourceRoot":"..\\src"}