{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/resources/index.js","src/services/build-service.js","C:/Users/robs/Documents/OefProjects/teamcity-radiator/src/app.html"],"names":["App","message","getAllBuilds","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","client","baseUrl","url","init","method","headers","Headers","response","fetch","json","body"],"mappings":";;;;;;;;;;;;;;;;;;;;;;MAEaA,cAAAA,MACX,eAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,uBAAaC,YAAb,CAA0B,uBAA1B,CAAf;AACD;;;;;;;;oBCLY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;ACAD,MAAIY,SAAS,oCAAb;;AAEA,WAASjB,YAAT,CAAsBkB,OAAtB,EAA+B;AAC3B,QAAIC,MAAOD,UAAU,oLAArB;;AAEA,QAAIE,OAAQ;AACVC,cAAQ,KADE;AAEVC,eAAS,IAAIC,OAAJ,CAAY;AACnB,kBAAU,kBADS;AAEnB,4BAAoB;AAFD,OAAZ;AAFC,KAAZ;;AAQA,QAAIC,WAAW,EAAf;;AAEAP,WAAOQ,KAAP,CAAaN,GAAb,EAAkBC,IAAlB,EACCL,IADD,CACM;AAAA,aAAYS,SAASE,IAAT,EAAZ;AAAA,KADN,EAECX,IAFD,CAEM,gBAAQ;AACZS,eAASG,IAAT,GAAgBA,IAAhB;AACD,KAJD;AAKA,WAAOH,QAAP;AACH;;oBAEc,EAACxB,cAAcA,YAAf;;ACzBf","file":"app-bundle.js","sourcesContent":["import buildService from 'services/build-service';\n\nexport class App {\n  constructor() {\n    this.message = buildService.getAllBuilds(\"http://localhost:8111\");\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {HttpClient} from 'aurelia-fetch-client';\r\n\r\nlet client = new HttpClient();\r\n\r\nfunction getAllBuilds(baseUrl) {\r\n    let url =  baseUrl + '/guestAuth/app/rest/buildTypes?locator=affectedProject:(id:_Root)&fields=buildType(id,name,builds($locator(running:false,canceled:false,count:1),build(number,status,statusText)))';\r\n    \r\n    let init =  {\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        'Accept': 'application/json',\r\n        'X-Requested-With': 'Fetch',\r\n      })\r\n    };\r\n    \r\n    let response = {};\r\n\r\n    client.fetch(url, init)\r\n    .then(response => response.json())\r\n    .then(body => {\r\n      response.body = body;\r\n    });\r\n    return response;\r\n}\r\n\r\nexport default {getAllBuilds: getAllBuilds};",null],"sourceRoot":"..\\src"}