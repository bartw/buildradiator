{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/resources/index.js","src/services/build-service.js","src/services/http-client-router.js","src/services/teamcitystub/team-city-builds-response.js","src/services/teamcitystub/team-city-http-client-stub.js","src/builds.js","src/build-overview.js","C:/Users/robs/Documents/OefProjects/teamcity-radiator/src/app.html","C:/Users/robs/Documents/OefProjects/teamcity-radiator/src/builds.html","C:/Users/robs/Documents/OefProjects/teamcity-radiator/src/overview-builds.html","C:/Users/robs/Documents/OefProjects/teamcity-radiator/src/build-overview.html"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BuildService","clientRouter","getAllFailedBuilds","baseUrl","url","init","method","headers","Headers","fetch","response","json","jsonResponse","buildType","filter","buildTypeElement","builds","build","length","status","statusText","HttpClientRouter","realHttpClient","teamCityHttpClientStub","includes","TeamCityHttpClientStub","resolve","setAllBuilds","service","Builds","BuildOverview","activate","params"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n  configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = 'Teamcity radiator';\r\n    config.map([\r\n      { route: ':baseUrl', name: 'Build Overview', moduleId: 'build-overview' },\r\n    ]);\r\n  }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { HttpClientRouter } from './http-client-router';\r\nimport { inject } from 'aurelia-framework';\r\n\r\n@inject(HttpClientRouter)\r\nexport class BuildService {\r\n  constructor(clientRouter) {\r\n    this.clientRouter = clientRouter;\r\n  }\r\n\r\n  getAllFailedBuilds(baseUrl) {\r\n    let url = baseUrl + '/guestAuth/app/rest/buildTypes?locator=affectedProject:(id:_Root)&fields=buildType(id,name,builds($locator(running:false,canceled:false,count:1),build(number,status,statusText)))';\r\n\r\n    let init = {\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        'Accept': 'application/json',\r\n        'X-Requested-With': 'Fetch',\r\n      })\r\n    };\r\n\r\n    return this.clientRouter.fetch(url, init)\r\n      .then(response => response.json())\r\n      .then(jsonResponse =>\r\n        jsonResponse.buildType\r\n          .filter(buildTypeElement => buildTypeElement.builds.build.length > 0)\r\n          .map(buildTypeElement => {\r\n            return {\r\n              \"name\": buildTypeElement.name,\r\n              \"status\": buildTypeElement.builds.build[0].status,\r\n              \"statusText\": buildTypeElement.builds.build[0].statusText\r\n            }\r\n          })\r\n          .filter(build => build.status === 'FAILURE'));\r\n  }\r\n}\r\n","import { HttpClient } from 'aurelia-fetch-client';\r\nimport { TeamCityHttpClientStub } from './teamcitystub/team-city-http-client-stub';\r\nimport { inject } from 'aurelia-framework';\r\n\r\n@inject(HttpClient, TeamCityHttpClientStub)\r\nexport class HttpClientRouter {\r\n    constructor(realHttpClient, teamCityHttpClientStub) {\r\n        this.realHttpClient = realHttpClient;\r\n        this.teamCityHttpClientStub = teamCityHttpClientStub;\r\n    }\r\n\r\n    fetch(url, init) {\r\n        return url.includes('stub') ? this.teamCityHttpClientStub.fetch() : this.realHttpClient.fetch(url, init);\r\n    }\r\n}\r\n","export default {\r\n  \"buildType\": [\r\n    {\r\n      \"name\": \"build 1\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 198, ignored: 9\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 2\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 2391, ignored: 6\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 3\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 35\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 4\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"SUCCESS\",\r\n            \"statusText\": \"Tests passed: 35\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 5\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 4 (1 new), passed: 31\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 6\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 2, passed: 33; snapshot dependency failed: Main :: Data Quality Tests :: build 6\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 7\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 3, passed: 32; snapshot dependency failed: Main :: Data Quality Tests :: build 7\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 8\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 8 (1 new), passed: 27; snapshot dependency failed: Main :: Data Quality Tests :: build 8\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 9\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 13, passed: 22; snapshot dependency failed: Main :: Data Quality Tests :: build 9\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"build 10\",\r\n      \"builds\": {\r\n        \"build\": [\r\n          {\r\n            \"status\": \"FAILURE\",\r\n            \"statusText\": \"Tests failed: 10, passed: 25\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n};","import teamCityBuildsResponse from './team-city-builds-response';\r\n\r\nexport class TeamCityHttpClientStub {\r\n  fetch() {\r\n    return Promise.resolve({json: ()=>teamCityBuildsResponse});\r\n  }\r\n};\r\n","import {BuildService} from 'services/build-service';\r\nimport {inject} from 'aurelia-framework';\r\n\r\nfunction setAllBuilds(builds, service) {\r\n  service\r\n  .getAllFailedBuilds('stub')\r\n  .then(builds => {builds.builds = builds;} ) \r\n}\r\n\r\n@inject(BuildService)\r\nexport class Builds {\r\n  constructor(service) {\r\n    setAllBuilds(this, service);\r\n  }\r\n}\r\n","import { BuildService } from 'services/build-service';\r\nimport { inject } from 'aurelia-framework';\r\n\r\n@inject(BuildService)\r\nexport class BuildOverview {\r\n  constructor(service) {\r\n    this.service = service;\r\n  }\r\n\r\n  activate(params) {\r\n    this.service\r\n      .getAllFailedBuilds(params.baseUrl)\r\n      .then(builds => { this.builds = builds; });\r\n  }\r\n}\r\n",null,null,null,null],"sourceRoot":"..\\src"}